#BlueJ class context
comment0.target=Conjunto
comment0.text=\r\n\ @author\ ECI,\ 2018\r\n\r\n
comment1.params=
comment1.target=Conjunto()
comment1.text=\r\n\ Constructor\ del\ conjunto\r\n
comment10.params=c
comment10.target=Conjunto\ union(Conjunto)
comment10.text=\r\n\ Devuelve\ la\ union\ de\ dos\ conjuntos\ que\ no\ tienen\ elementos\ repetidos\r\n\ @param\ es\ el\ conjunto\ a\ unir\r\n\ @return\ devuelve\ un\ nuevo\ conjunto\ con\ la\ union\r\n
comment11.params=c
comment11.target=Conjunto\ interseccion(Conjunto)
comment11.text=\r\n\ Este\ m\u00E9todo\ nos\ devuelve\ un\ conjunto\ con\ la\ interseccion\ con\ \r\n\ el\ conjunto\ c.\r\n\ @param\ c\ un\ conjunto\ para\ intersectar\r\n\ @return\ un\ conjunto\ con\ la\ interseccion\ de\ los\ dos\r\n
comment12.params=c
comment12.target=Conjunto\ diferencia(Conjunto)
comment12.text=\r\n\ \ Este\ m\u00E9todo\ nos\ devuelve\ un\ conjunto\ con\ la\ diferencia\ con\ \r\n\ el\ conjunto\ c.\r\n\ @param\ c\ un\ conjunto\ para\ restar\r\n\ @return\ un\ conjunto\ con\ la\ diferencia\ de\ los\ dos\r\n
comment13.params=c
comment13.target=Conjunto\ diferenciaSimetrica(Conjunto)
comment13.text=\r\n\ \ Este\ m\u00E9todo\ nos\ devuelve\ un\ conjunto\ con\ la\ diferencia\ simetrica\ con\ \r\n\ el\ conjunto\ c.\r\n\ @param\ c\ un\ conjunto\ para\ hacer\ la\ diferencia\r\n\ @return\ un\ conjunto\ con\ la\ diferencia\ simetrica\ de\ los\ dos\r\n
comment14.params=c
comment14.target=Conjunto\ producto(Conjunto)
comment14.text=\r\n\ Este\ m\u00E9todo\ calcula\ el\ producto\ entre\ dos\ conjuntos.\r\n\ @param\ c\ es\ el\ conjunto\ para\ hacer\ el\ producto\r\n\ @return\ devuelve\ un\ conjunto\ con\ el\ producto\ entre\ los\ dos\ conjuntos.\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\ \r\n\ Retorna\ una\ cadena\ que\ describe\ este\ conjunto\ con\ los\ elementos\ en\ mayusculas,\ entre\ corchetes,\ ordenados\ alfabeticamente\ y\ \r\n\ separados\ por\ coma\r\n
comment2.params=elementos
comment2.target=Conjunto(java.lang.String[])
comment2.text=\r\n\ Constructor\ del\ conjunto\r\n\ @param\ elementos\ son\ los\ valores\ a\ comparar\ \r\n
comment3.params=elemento
comment3.target=boolean\ repetMin(java.lang.String)
comment3.text=\r\n\ Compara\ los\ elementos\ de\ un\ ArrayList\ en\ minuscula\ que\ esten\ repetidos\r\n\ @param\ elemento\ es\ el\ valor\ a\ comparar\r\n\ @return\ si\ el\ elemento\ se\ encuentra\ en\ el\ conjunto\ (como\ minuscula).\r\n
comment4.params=
comment4.target=int\ cardinal()
comment4.text=\r\n\ Calcula\ el\ cardinal\ del\ conjunto\r\n\ @return\ devuelve\ la\ longitud\ del\ conjunto.\r\n
comment5.params=elemento
comment5.target=boolean\ pertenece(java.lang.String)
comment5.text=\r\n\ Verifica\ si\ un\ elemento\ pertenece\ al\ conjunto\r\n\ @param\ elemento,\ el\ elemento\ a\ verificar\r\n\ @return\r\n
comment6.params=c
comment6.target=boolean\ equals(Conjunto)
comment6.text=\r\n\ Compara\ este\ conjunto\ con\ otro\r\n\ @param\ c\ el\ conjunto\ a\ comparar\r\n\ @return\ devuelve\ si\ un\ conjunto\ es\ igual\ a\ otro.\r\n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\ \r\n\ Compara\ si\ este\ conjunto\ es\ igual\ a\ otro\ (el\ parametro\ debe\ ser\ un\ conjunto)\r\n
comment8.params=c
comment8.target=boolean\ contenido(Conjunto)
comment8.text=\ \r\n\ Indica\ si\ el\ conjunto\ c\ esta\ contenido\r\n
comment9.params=
comment9.target=java.util.ArrayList\ darElementos()
comment9.text=\r\n\ Este\ m\u00E9todo\ devuelve\ una\ lista\ con\ los\ elementos\ del\ conjunto\r\n\ \r\n
numComments=16
